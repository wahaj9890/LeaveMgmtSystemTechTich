{"version":3,"sources":["Redux/leaveSlice.js","Components/Modal.js","Components/ShowList.js","Components/NavBar.js","Components/AddLeave.js","Components/Landing.js","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["leaveSlice","createSlice","name","initialState","allUserList","reducers","addNewLeave","state","action","payload","deleteLeave","filter","leave","index","actions","Modal","props","dispatch","useDispatch","className","id","role","type","onClick","ShowList","useState","setIndex","useSelector","length","map","FirstName","LastName","Email","MobileNumber","DOB","Reason","onIndexHandler","NavBar","to","AddLeave","history","useHistory","emailIsUnique","setEmailIsUnique","phoneIsUnique","setPhoneIsUnique","request","setRequest","onChangeHandler","e","target","value","onSubmit","preventDefault","isEmailExist","item","isPhoneExist","push","onChange","placeholder","disabled","Landing","path","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c0ef8a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  allUserList: [],\r\n};\r\nconst leaveSlice = createSlice({\r\n  name: \"slice\",\r\n  initialState,\r\n  reducers: {\r\n    addNewLeave: (state, action) => {\r\n      state.allUserList = [...state.allUserList, action.payload];\r\n    },\r\n    deleteLeave: (state, action) => {\r\n      state.allUserList = state.allUserList.filter(\r\n        (leave, index) => index !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\nexport const { addNewLeave, deleteLeave } = leaveSlice.actions;\r\nexport default leaveSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteLeave } from \"../Redux/leaveSlice\";\r\n\r\nconst Modal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const deleteRecord = (index) => {\r\n    dispatch(deleteLeave(index));\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                Delete\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <h3>Are you sure?</h3>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                No\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-sm\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => deleteRecord(props.index)}\r\n              >\r\n                Yes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Modal from \"./Modal\";\r\nconst ShowList = () => {\r\n  const [index, setIndex] = useState(\"\");\r\n  const { allUserList } = useSelector((state) => state.leave);\r\n\r\n  const onIndexHandler = (index) => {\r\n    setIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col \">\r\n        <table className=\"table  table-striped table-hover\">\r\n          <thead className=\"bg-teal text-white text-center \">\r\n            <tr>\r\n              <th className=\"font-weight-bold\">Sr.No</th>\r\n              <th className=\"font-weight-bold\">Fist Name</th>\r\n              <th className=\"font-weight-bold\">Last Name</th>\r\n              <th className=\"font-weight-bold\">Email</th>\r\n              <th className=\"font-weight-bold\">Mobile Number</th>\r\n              <th className=\"font-weight-bold\">DOB</th>\r\n              <th className=\"font-weight-bold\">Leave Reason</th>\r\n              <th className=\"font-weight-bold\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-center \">\r\n            {allUserList.length !== 0 &&\r\n              allUserList.map((leave, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{leave.FirstName}</td>\r\n                  <td>{leave.LastName}</td>\r\n                  <td>{leave.Email}</td>\r\n                  <td>{leave.MobileNumber}</td>\r\n                  <td>{leave.DOB}</td>\r\n                  <td>{leave.Reason}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger text-white btn-sm bg-danger button-outline \"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#exampleModalCenter\"\r\n                      onClick={() => onIndexHandler(index)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        <Modal index={index} />\r\n        {allUserList.length === 0 && (\r\n          <h3 className=\"text-center text-danger \">No Leaves Yet!</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm bg-teal navbar-dark\">\r\n        <div className=\"container-fluid\">\r\n          <div\r\n            className=\"navbar-toggler\"\r\n            data-target=\"#my-menu\"\r\n            data-toggle=\"collapse\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </div>\r\n          <Link to=\"#\" className=\"navbar-brand\">\r\n            Employee Management System\r\n          </Link>\r\n\r\n          <div className=\"navbar-collapse collapse\" id=\"my-menu\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\" nav-item mx-2\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  Show List\r\n                </Link>\r\n              </li>\r\n              <li className=\" nav-item mx-2\">\r\n                <Link to=\"/addleave\" className=\"nav-link\">\r\n                  Add Leaves\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { addNewLeave } from \"../Redux/leaveSlice\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddLeave = () => {\r\n  const history = useHistory();\r\n  const [emailIsUnique, setEmailIsUnique] = useState(false);\r\n  const [phoneIsUnique, setPhoneIsUnique] = useState(false);\r\n  const { allUserList } = useSelector((state) => state.leave);\r\n\r\n  const dispatch = useDispatch();\r\n  const [request, setRequest] = useState({\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Email: \"\",\r\n    MobileNumber: \"\",\r\n    DOB: \"\",\r\n    Reason: \"\",\r\n  });\r\n\r\n  const onChangeHandler = (e) => {\r\n    setRequest({\r\n      ...request,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const applyRequestHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isEmailExist = allUserList.filter(\r\n      (item) => item.Email === request.Email\r\n    ).length;\r\n    const isPhoneExist = allUserList.filter(\r\n      (item) => item.MobileNumber === request.MobileNumber\r\n    ).length;\r\n    if (isEmailExist > 0) {\r\n      setEmailIsUnique(true);\r\n    } else {\r\n      setEmailIsUnique(false);\r\n    }\r\n    if (isPhoneExist > 0) {\r\n      setPhoneIsUnique(true);\r\n    } else {\r\n      setPhoneIsUnique(false);\r\n    }\r\n    if (isEmailExist === 0 && isPhoneExist === 0) {\r\n      dispatch(addNewLeave(request));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-md-3\"></div>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header bg-info text-white\">\r\n            <h3>Add New Leave</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"form\" onSubmit={applyRequestHandler}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"FirstName\"\r\n                  value={request.FirstName}\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"LastName\"\r\n                  value={request.LastName}\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Last Name\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"Email\"\r\n                  value={request.Email}\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                ></input>\r\n                {emailIsUnique && (\r\n                  <p className=\"text-danger\">Email is already exist</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"MobileNumber\"\r\n                  value={request.MobileNumber}\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Mobile Number\"\r\n                ></input>\r\n                {phoneIsUnique && (\r\n                  <p className=\"text-danger\">Phone is already exist</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"DOB\"\r\n                  value={request.DOB}\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  value={request.Reason}\r\n                  name=\"Reason\"\r\n                  onChange={onChangeHandler}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Leave Reason\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Apply\"\r\n                    disabled={!request.Email}\r\n                    className=\"btn btn-success\"\r\n                  ></input>\r\n                }\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLeave;\r\n","import React from \"react\";\r\nimport ShowList from \"./ShowList\";\r\nimport { Route } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport AddLeave from \"./AddLeave\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container\">\r\n        <Route path=\"/\" exact component={ShowList}></Route>\r\n        <Route path=\"/addleave\" component={AddLeave}></Route>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/mdbreact/dist/css/mdb.css\";\nimport \"../node_modules/bootstrap-css-only/css/bootstrap.min.css\";\nimport Landing from \"./Components/Landing\";\n\nfunction App() {\n  return (\n    <div>\n      <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport leaveSlice from \"./leaveSlice\";\r\nconst store = configureStore({\r\n  reducer: {\r\n    leave: leaveSlice,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}